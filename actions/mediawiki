#!/usr/bin/python3
# -*- mode: python -*-
#
# This file is part of Plinth.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
"""
Configuration helper for Mediawiki
"""

import argparse
import grp
import os
import grp
import pwd
import shutil
import subprocess

from plinth import action_utils


def parse_arguments():
    """Return parsed command line arguments as dictionary."""
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='subcommand', help='Sub command')

    subparsers.add_parser('enable', help='Enable mediawiki')
    subparsers.add_parser('disable', help='Disable mediawiki')
    subparsers.add_parser('configure', help='Configure mediawiki')

    subparsers.required = True
    return parser.parse_args()


def subcommand_configure(_):
    """Create data directory for mediawiki"""
    data_dir = '/var/www/data/'
    uid = pwd.getpwnam("www-data").pw_uid
    gid = grp.getgrnam("www-data").gr_gid
    os.mkdir(data_dir)
    os.chown(data_dir, uid, gid)
    os.chmod(data_dir, 0o755)


def subcommand_enable(_):
    """Enable web configuration and reload."""
    action_utils.service_enable('mediawiki')
    action_utils.webserver_enable('mediawiki')


def subcommand_disable(_):
    """Disable web configuration and reload."""
    action_utils.webserver_disable('mediawiki')
    action_utils.service_disable('mediawiki')


def main():
    """Parse arguments and perform all duties."""
    arguments = parse_arguments()

    subcommand = arguments.subcommand.replace('-', '_')
    subcommand_method = globals()['subcommand_' + subcommand]
    subcommand_method(arguments)


if __name__ == '__main__':
    main()
